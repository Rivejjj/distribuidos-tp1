name: tp1
services:
  rabbitmq:
    container_name: rabbit
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15672:15672
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672/" ]
      interval: 10s
      timeout: 5s
      retries: 10

  client:
    container_name: client
    image: client:latest
    entrypoint: python3 /main.py
    depends_on:
      - gateway
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - BOOKS_PATH=/data/books_data.csv
      - BOOKS_REVIEWS_PATH=/data/Books_rating.csv
    volumes:
      - ./data:/data

  gateway:
    container_name: gateway
    image: gateway:latest
    entrypoint: python3 /main.py
    links:
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - EXCHANGE=query

  published_year_filter:
    container_name: published_year_filter
    image: book-filter:latest
    entrypoint: python3 /main.py
    environment:
      - ID=2
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - PUBLISHED_YEAR_RANGE=1990-1999
      - EXCHANGE=query
      - OUTPUT_QUEUE=90s_filter
      - SAVE_BOOKS=True

  reviews_counter:
    container_name: reviews_counter
    image: reviews_counter_accum:latest
    entrypoint: python3 /main.py
    environment:
      - ID=3
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - INPUT_QUEUE=90s_filter
      - OUTPUT_QUEUE=result
      - OUTPUT_QUEUE=500_reviews

  avg_rating_accumulator:
    container_name: avg_rating_accumulator
    image: accumulator:latest
    entrypoint: python3 /main.py
    environment:
      - ID=4
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - INPUT_QUEUE=500_reviews
      - OUTPUT_QUEUE=result

  # decades-accumulator:
  #   container_name: decades-accumulator
  #   image: decades-accumulator:latest
  #   entrypoint: python3 /main.py
  #   environment:
  #     - ID=1
  #     - PYTHONUNBUFFERED=1
  #     - LOGGING_LEVEL=DEBUG
  #     - TOP=10
  #     - EXCHANGE=query
  #     - OUTPUT_QUEUE=result

  # category_filter:
  #   container_name: category_filter
  #   image: book-filter:latest
  #   entrypoint: python3 /main.py
  #   depends_on:
  #     - rabbitmq
  #   links:
  #     - rabbitmq
  #   environment:
  #     - ID=1
  #     - PYTHONUNBUFFERED=1
  #     - LOGGING_LEVEL=DEBUG
  #     - CATEGORY=Computers
  #     - OUTPUT_QUEUE=computers_filtered
  #     - EXCHANGE=query


  # title_contains_filter:
  #   container_name: title_contains_filter
  #   image: book-filter:latest
  #   entrypoint: python3 /main.py
  #   depends_on:
  #     - rabbitmq
  #   links:
  #     - rabbitmq
  #   environment:
  #     - ID=3
  #     - PYTHONUNBUFFERED=1
  #     - LOGGING_LEVEL=DEBUG
  #     - TITLE_CONTAINS=distributed
  #     - INPUT_QUEUE=published_year_filtered
  #     - OUTPUT_QUEUE=result

    


    # title_contains_filter:
    #   container_name: title_contains_filter
    #   image: book-filter:latest
    #   entrypoint: python3 /main.py
    #   environment:
    #     - PYTHONUNBUFFERED=1
    #     - LOGGING_LEVEL=INFO
    #     - TITLE_CONTAINS=distributed
    #   networks:
    #     - testing_net

